name: Build Application
on: [pull_request]
jobs:
  build:
    name: Gradle Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, macos-14, windows-latest ]
      fail-fast: false
    permissions:
      id-token: write
      contents: read
      attestations: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Create MacOS installer
        id: mac_installer
        if: startsWith(matrix.os, 'mac')
        run: |
          ./gradlew --info --stacktrace jpackage
          echo ::set-output name=OUTPUT_FILE::$(find build/jpackage -name "*.dmg" -exec realpath {} \;)
          echo ::set-output name=ARCH_TYPE::$(uname -m)
      - name: Create Linux installer
        id: ubuntu_installer
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          ./gradlew --info --stacktrace jpackage
          echo ::set-output name=OUTPUT_FILE::$(find build/jpackage -name "*.deb" -exec realpath {} \;)
      - name: Create Windows installer
        if: startsWith(matrix.os, 'windows')
        run: |
          $env:Path += ";%cd%\wix314-binaries"; .\gradlew jpackage --info --stacktrace
          Get-ChildItem build\jpackage\*.exe | Select-Object -First 1 | % { echo "OUTPUT_FILE=$($_.FullName)" >> $env:GITHUB_ENV }
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "${{ env.OUTPUT_FILE }}"
      - name: Upload Mac Artifact
        if: startsWith(matrix.os, 'mac')
        uses: actions/upload-artifact@v4
        with:
          name: fqlite-${{ matrix.os }}-${{ steps.mac_installer.outputs.ARCH_TYPE }}
          path: "${{ steps.mac_installer.outputs.OUTPUT_FILE }}"
      - name: Upload Windows Artifact
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: fqlite-${{ matrix.os }}
          path: "${{ env.OUTPUT_FILE }}"
      - name: Upload Linux Artifact
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v4
        with:
          name: fqlite-${{ matrix.os }}
          path: "${{ steps.ubuntu_installer.outputs.OUTPUT_FILE }}"